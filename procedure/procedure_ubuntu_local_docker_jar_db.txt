# procedure_ubuntu_local_docker_jar_db.txt

# Ubuntu 15.10

#*******************************************************************************************************************
# Web Camera (Audio)
#*******************************************************************************************************************
sudo touch /etc/modprobe.d/sound.conf
sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/sound.conf"
sudo sh -c "echo 'options snd_hda_intel index=1' >> /etc/modprobe.d/sound.conf"
sudo gpasswd -a $USER audio

#*******************************************************************************************************************
# PT2, PT3
#*******************************************************************************************************************
sudo sh -c "echo '' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo 'blacklist earth-pt1' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo '' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo 'blacklist earth-pt3' >> /etc/modprobe.d/blacklist.conf"
sudo gpasswd -a $USER video

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get -y install build-essential pcscd git

#*******************************************************************************************************************
# Ja
#*******************************************************************************************************************
sudo apt-get -y install language-pack-ja-base

#*******************************************************************************************************************
# PT2 driver w/Linux 4.2 patch
#*******************************************************************************************************************
cd /tmp && \
wget http://hg.honeyplanet.jp/pt1/archive/c8688d7d6382.tar.bz2 && \
tar xvlf c8688d7d6382.tar.bz2 && \
cd pt1-c8688d7d6382/driver && \
git clone https://github.com/hirooka/pt1_for_linux4.2.patch.git && \
patch pt1_pci.c < pt1_for_linux4.2.patch/pt1_for_linux4.2.patch && \
make && \
sudo make install && \
sudo modprobe pt1_drv

#*******************************************************************************************************************
# PT3 driver
#*******************************************************************************************************************
cd /tmp && \
git clone https://github.com/m-tsudo/pt3.git && \
cd pt3 && \
make && \
sudo make install && \
sudo modprobe pt3_drv

#*******************************************************************************************************************
# Docker
#*******************************************************************************************************************
sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
sudo touch /etc/apt/sources.list.d/docker.list
sudo sh -c "echo 'deb https://apt.dockerproject.org/repo ubuntu-wily main' >> /etc/apt/sources.list.d/docker.list"
sudo apt-get update
sudo apt-get -y install linux-image-extra-$(uname -r)
sudo apt-get -y install docker-engine
sudo usermod -aG docker $USER

#*******************************************************************************************************************
# Java 8
#*******************************************************************************************************************
sudo apt-get -y install python-software-properties software-properties-common
sudo sh -c "echo 'oracle-java8-installer shared/accepted-oracle-license-v1-1 select true' | debconf-set-selections"
sudo add-apt-repository -y ppa:webupd8team/java
sudo apt-get update
sudo apt-get -y install oracle-java8-installer
sudo apt-get -y install oracle-java8-set-default

sudo reboot

#*******************************************************************************************************************
# chukasa
#*******************************************************************************************************************
sudo mkdir /opt/chukasa
sudo chown $USER:$USER /opt/chukasa
mkdir /opt/chukasa/video

# clone project and edit configuration file
git clone https://github.com/hirooka/chukasa.git
cd chukasa
sed -i -e "s/spring.data.mongodb.host=localhost/spring.data.mongodb.host=mongo/g" src/main/resources/application.properties

# build chukasa application
./gradlew build

# build chukasa Docker image
docker build -t hirooka/chukasa:0.0.1-SNAPSHOT-DOCKER .
# or pull Docker image
# docker pull hirooka/chukasa:0.0.1-SNAPSHOT-DOCKER

# pull and run MongoDB Docker image
docker pull mongo
docker run --name some-mongo -d mongo

# run chukasa Docker image with MongoDB Docker image
docker run --link some-mongo:mongo --privileged --volume /dev/:/dev/ --volume /var/run/pcscd/pcscd.comm:/var/run/pcscd/pcscd.comm -v /opt/chukasa/video:/opt/chukasa/video -p 80:80 -v /etc/localtime:/etc/localtime:ro -it hirooka/chukasa:0.0.1-SNAPSHOT-DOCKER /bin/bash

#*******************************************************************************************************************
# use chukasa
#*******************************************************************************************************************
# access chukasa IP address by iOS 9 Safari or OS X 10.11 Safari
# Tap / Click [Start HTTP Live Streaming (HLS)] button
# Streaming begins to start

#*******************************************************************************************************************
# End Of File
#*******************************************************************************************************************