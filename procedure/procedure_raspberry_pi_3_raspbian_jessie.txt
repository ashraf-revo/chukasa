# procedure_raspberry_pi_3_raspbian_jessie.txt

# Raspbian Jessie 2016-05-10

#*******************************************************************************************************************
# Lib
#*******************************************************************************************************************
sudo touch /etc/ld.so.conf.d/local.conf
sudo sh -c "echo '/usr/local/lib' >> /etc/ld.so.conf.d/local.conf"

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade

sudo reboot

#*******************************************************************************************************************
# Web Camera (Audio)
#*******************************************************************************************************************
#cat /proc/asound/modules
sudo touch /etc/modprobe.d/alsa-base.conf
sudo sh -c "echo 'options snd slots=snd_usb_audio,snd_bcm2835' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/alsa-base.conf"
sudo sh -c "echo 'options snd_bcm2835 index=1' >> /etc/modprobe.d/alsa-base.conf"
sudo gpasswd -a $USER audio

#*******************************************************************************************************************
# PX-S1UD V2.0
#*******************************************************************************************************************
cd /tmp && \
    wget http://plex-net.co.jp/plex/px-s1ud/PX-S1UD_driver_Ver.1.0.1.zip && \
    unzip PX-S1UD_driver_Ver.1.0.1.zip && \
    sudo cp PX-S1UD_driver_Ver.1.0.1/x64/amd64/isdbt_rio.inp /lib/firmware/
sudo gpasswd -a $USER video

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get -y install autoconf libpcsclite-dev pcsc-tools pcscd cmake

#*******************************************************************************************************************
# recdvb
#*******************************************************************************************************************
cd /tmp && \
    wget http://hg.honeyplanet.jp/pt1/archive/ec7c87854f2f.tar.bz2 && \
    tar xvlf ec7c87854f2f.tar.bz2 && \
    cd pt1-ec7c87854f2f/arib25 && \
    make && \
    sudo make install && \
    sudo ldconfig

cd /tmp && \
    wget http://www13.plala.or.jp/sat/recdvb/recdvb-1.3.1.tgz && \
    tar zxvf recdvb-1.3.1.tgz && \
    cd recdvb-1.3.1 && \
    ./autogen.sh && \
    ./configure --enable-b25 && \
    make && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# epgdump
#*******************************************************************************************************************
cd /tmp && \
    git clone https://github.com/Piro77/epgdump.git && \
    cd epgdump && \
    ./autogen.sh && \
    make && \
    sudo make install

#*******************************************************************************************************************
# Libav
#*******************************************************************************************************************
sudo sh -c "echo 'deb http://www.deb-multimedia.org jessie main non-free' >> /etc/apt/sources.list"
sudo sh -c "echo 'deb-src http://www.deb-multimedia.org jessie main non-free' >> /etc/apt/sources.list"
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 5C808C2B65558117
sudo apt-get update
sudo apt-get build-dep ffmpeg
cd /tmp
git clone https://github.com/libav/libav --depth 1
cd libav
./configure --enable-static --enable-omx-rpi --enable-mmal
make -j4
sudo make install

#*******************************************************************************************************************
# nginx
#*******************************************************************************************************************
cd /tmp && \
    sudo apt-get -y install libpcre3-dev libpcre++-dev libssl-dev && \
    wget http://nginx.org/download/nginx-1.11.1.tar.gz && \
    tar zxvf nginx-1.11.1.tar.gz && \
    cd nginx-1.11.1 && \
    ./configure --with-http_ssl_module --with-ipv6 --with-http_v2_module && \
    make -j4 && \
    sudo make install

#*******************************************************************************************************************
# MongoDB
#*******************************************************************************************************************
sudo apt-get install mongodb

#*******************************************************************************************************************
# chukasa
#*******************************************************************************************************************
sudo mkdir /opt/chukasa
sudo chown $USER:$USER /opt/chukasa
mkdir /opt/chukasa/video

# clone project and edit configuration file
cd /tmp
git clone https://github.com/hirooka/chukasa.git
cd chukasa
sed -i -e "s/system.ffmpeg-path=\/usr\/local\/bin\/ffmpeg/system.ffmpeg-path=\/usr\/local\/bin\/avconv/g" src/main/resources/application.properties
sed -i -e "s/system.recpt1-path=\/usr\/local\/bin\/recpt1/system.recpt1-path=\/usr\/local\/bin\/recdvb/g" src/main/resources/application.properties
sed -i -e "s/system.quick-sync-video-enabled=true/system.quick-sync-video-enabled=false/g" src/main/resources/application.properties
sed -i -e "s/system.openmax-enabled=false/system.openmax-enabled=true/g" src/main/resources/application.properties

# build chukasa application
./gradlew build
cp build/libs/chukasa-0.0.1-SNAPSHOT.jar /opt/chukasa/

sudo cp ubuntu/systemd/chukasa.service /etc/systemd/system/
sudo systemctl enable chukasa
sudo systemctl start chukasa

sudo cp ubuntu/nginx/nginx.conf /usr/local/nginx/conf/nginx.conf
sudo cp ubuntu/systemd/nginx.service /etc/systemd/system/
sudo systemctl enable nginx
sudo systemctl start nginx

sudo reboot

#*******************************************************************************************************************
# End Of File
#*******************************************************************************************************************