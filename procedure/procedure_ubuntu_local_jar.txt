# procedure_ubuntu_local_jar.txt

# Ubuntu 15.10

#*******************************************************************************************************************
# Web Camera (Audio)
#*******************************************************************************************************************
sudo touch /etc/modprobe.d/sound.conf
sudo sh -c "echo 'options snd_usb_audio index=0' >> /etc/modprobe.d/sound.conf"
sudo sh -c "echo 'options snd_hda_intel index=1' >> /etc/modprobe.d/sound.conf"
sudo gpasswd -a $USER audio

#*******************************************************************************************************************
# PT2, PT3
#*******************************************************************************************************************
sudo sh -c "echo '' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo 'blacklist earth-pt1' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo '' >> /etc/modprobe.d/blacklist.conf"
sudo sh -c "echo 'blacklist earth-pt3' >> /etc/modprobe.d/blacklist.conf"
sudo gpasswd -a $USER video

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get update
sudo apt-get -y upgrade
sudo apt-get -y dist-upgrade

sudo reboot

#*******************************************************************************************************************
# Package
#*******************************************************************************************************************
sudo apt-get -y install build-essential git wget libasound2-dev autoconf libtool pcsc-tools pkg-config libpcsclite-dev

#*******************************************************************************************************************
# Lib
#*******************************************************************************************************************
sudo touch /etc/ld.so.conf.d/local.conf
sudo sh -c "echo '/usr/local/lib' >> /etc/ld.so.conf.d/local.conf"
sudo sh -c "echo '/usr/local/ffmpeg-0.11.5/lib' >> /etc/ld.so.conf.d/local.conf"

#*******************************************************************************************************************
# Yasm (1.3.0)
#*******************************************************************************************************************
cd /tmp && \
    wget http://www.tortall.net/projects/yasm/releases/yasm-1.3.0.tar.gz && \
    tar zxvf yasm-1.3.0.tar.gz && \
    cd yasm-1.3.0 && \
    ./configure && \
    make -j8 && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# x264 (0.148.x (20160305-2245-stable))
#*******************************************************************************************************************
cd /tmp && \
    wget http://download.videolan.org/pub/x264/snapshots/x264-snapshot-20160305-2245-stable.tar.bz2 && \
    tar xjvf x264-snapshot-20160305-2245-stable.tar.bz2 && \
    cd x264-snapshot-20160305-2245-stable && \
    ./configure --enable-shared && \
    make -j8 && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# Fraunhofer FDK AAC (0.14)
#*******************************************************************************************************************
cd /tmp && \
    wget https://github.com/mstorsjo/fdk-aac/archive/v0.1.4.zip && \
    unzip v0.1.4.zip && \
    cd fdk-aac-0.1.4 && \
    autoreconf -fiv && \
    ./configure && \
    make -j8 && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# FFmpeg 0.11.5
#*******************************************************************************************************************
cd /tmp && \
    wget https://www.ffmpeg.org/releases/ffmpeg-0.11.5.tar.bz2 && \
    tar jxvf ffmpeg-0.11.5.tar.gz && \
    cd ffmpeg-0.11.5 && \
    ./configure --enable-gpl --enable-libx264 --prefix=/usr/local/ffmpeg-0.11.5  && \
    make -j8 && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# FFmpeg (3.0)
#*******************************************************************************************************************
cd /tmp && \
    wget https://www.ffmpeg.org/releases/ffmpeg-3.0.tar.bz2 && \
    tar jxvf ffmpeg-3.0.tar.bz2 && \
    cd ffmpeg-3.0 && \
    ./configure --enable-gpl --enable-libx264 --enable-libfdk-aac --enable-nonfree --enable-shared && \
    make -j8 && \
    sudo make install && \
    sudo ldconfig

#*******************************************************************************************************************
# PT2 driver w/Linux 4.2 patch
#*******************************************************************************************************************
cd /tmp && \
  wget http://hg.honeyplanet.jp/pt1/archive/c8688d7d6382.tar.bz2 && \
  tar xvlf c8688d7d6382.tar.bz2 && \
  cd pt1-c8688d7d6382/driver && \
  git clone https://github.com/hirooka/pt1_for_linux4.2.patch.git && \
  patch pt1_pci.c < pt1_for_linux4.2.patch/pt1_for_linux4.2.patch && \
  make && \
  sudo make install && \
  sudo modprobe pt1_drv

#*******************************************************************************************************************
# PT3 driver
#*******************************************************************************************************************
cd /tmp && \
  git clone https://github.com/m-tsudo/pt3.git && \
  cd pt3 && \
  make && \
  sudo make install && \
  sudo modprobe pt3_drv

#*******************************************************************************************************************
# recpt1
#*******************************************************************************************************************
cd /tmp && \
    wget http://hg.honeyplanet.jp/pt1/archive/ec7c87854f2f.tar.bz2 && \
    tar xvlf ec7c87854f2f.tar.bz2 && \
    cd pt1-ec7c87854f2f/arib25 && \
    make && \
    sudo make install && \
    sudo ldconfig

cd /tmp && \
    git clone https://github.com/stz2012/recpt1.git && \
    cd recpt1/recpt1 && \
    ./autogen.sh && \
    ./configure --enable-b25 && \
    make && \
    sudo make install

#*******************************************************************************************************************
# Java 8 (1.8.0_74)
#*******************************************************************************************************************
sudo apt-get -y install python-software-properties software-properties-common
sudo sh -c "echo 'oracle-java8-installer shared/accepted-oracle-license-v1-1 select true' | debconf-set-selections"
sudo add-apt-repository -y ppa:webupd8team/java
sudo apt-get update
sudo apt-get -y install oracle-java8-installer
sudo apt-get -y install oracle-java8-set-default

#*******************************************************************************************************************
# chukasa
#*******************************************************************************************************************
sudo mkdir /opt/chukasa
sudo chown $USER:$USER /opt/chukasa
mkdir /opt/chukasa/video

# clone project
git clone https://github.com/hirooka/chukasa.git

# build chukasa application and deploy it
cd chukasa
./gradlew build
cp build/libs/chukasa-0.0.1-SNAPSHOT.jar /opt/chukasa/

sudo touch /etc/systemd/system/chukasa.service
# use "ubuntu/systemd/chukasa.service"
# then
sudo systemctl enable chukasa
sudo systemctl start chukasa

#*******************************************************************************************************************
# nginx (1.9.12)
#*******************************************************************************************************************
cd /tmp && \
    sudo apt-get -y install libpcre3-dev libpcre++-dev libssl-dev && \
    wget http://nginx.org/download/nginx-1.9.12.tar.gz && \
    tar zxvf nginx-1.9.12.tar.gz && \
    cd nginx-1.9.12 && \
    ./configure --with-http_ssl_module --with-ipv6 --with-http_v2_module && \
    make -j8 && \
    sudo make install

# use "ubuntu/nginx/nginx.conf" instead of "/usr/local/nginx/conf/nginx.conf"

sudo touch /etc/systemd/system/nginx.service
# use "ubuntu/systemd/nginx.service"
# then
sudo systemctl enable nginx
sudo systemctl start nginx

sudo reboot

#*******************************************************************************************************************
# use chukasa
#*******************************************************************************************************************
# access chukasa IP address by iOS 9 Safari or OS X 10.11 Safari
# Tap / Click [Start HTTP Live Streaming (HLS)] button
# Streaming begins to start

#*******************************************************************************************************************
# End Of File
#*******************************************************************************************************************